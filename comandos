Comandos do git

git commit -m "contaúdo da mensagem de commit": Gravação de arquivo no git. Esse comando serve para cometer os arquivos no git.
O "-m" é árbitro à termo "mensseger". Ou seja, mensagem que será gravado não cometer.

ctrl + l = É o comando que limpa a tela do terminal do git.

git log: Comando para visualizar os registros dos arquivos gravados no repositório. 

git remoto adicionar origem + endereço da massa no github: Esse comando permite apontar para o repositório no github.
Ou seja, o usuário cria uma página no github e pode direcionar uma página do seu computador local para a massa do github sem
clonar o repositório.

git clone + endereço da massa no github: Esse comando servir para clonar um projeto no github.

gitignore: Arquivo para ser criado no git e evitar que determinados arquivos sejam adicionaos.
Ou seja, o git vai ignorar os arquivos que estuverem dentro dele. 

Exemplo: touch .gitignore (Criar arquivo dentro da massa desterminada)
echo "nome do arquivo que vc quer ignorar" >> .gitignore (Escreve dentro do arquivo do gitignore o nome do arquivo que 
você quer ignorar.).

git add .gitignore: Adicionando o gitignore detro do githubIgnorando todos os arquivos de uma extenção: 
echo "*.log" >> .gitignore

Ignorando um diretório inteiro:
eco "pastaignorada/" >> .gitignore

git cometer -am "Rastreando/adicionando e commitando ao mesmo tempo um arquivo."

git log -n 3: Comando mostra os três últimos compromissos.

git log --oneline: Resumo dos comete feitos no projeto.

git log --estado: Mostra o resumo dos arquivos alterados com o número de linhas alteradas e removidas.

git rm nomedoarquivo: Esse comando servir para removedor/deletar um arquivo do repositório. Todo arquivo removido precisa ser
commitado - Não esquecer disso.

git mv nomeantigo nome_novo: O comando "mv" altera o nome de um arquivo. Ou seja, renomeia o arquivo existente, exemplo:

  git mv algo01.py algoritmo01.py

git checkout - nomedoarquivo: Esse comando permite desfazer uma alteração em um determinado arquivo, exemplo:

  echo "Mudança no arquivo!" >> arquivo.txt -> Efetuano mudança no arquivo.

git checkout - arquivo.txt: Cancelando a última alteração do arquivo. Lembrando, como alterações só pode ser refeitas
se está para um palco do. Ou seja, antes de adicionar o arquivo com o comando -> git adicionar nomedoarquivo.

git reset --hard: Comando para desfazer todas as modificações que você fez.

git filial novo_branch: Comando para criar um novo ramo.

git filial: Comando para listar como ramificações existentes.

git checkout novo_branch: Comando para mudar de filial.

git checkout -b nova_branch: Comando cria uma nova filial e troca para ela ao mesmo tempo.

git branch -d nova_branch: Comando deleta um ramo criado.

OBS: Uma filial só pode ser deletada se o usuário não está lá. Ou seja, o desenvolvedor deve mudar de ramo com o comando "git checkout master" (por exemplo) e deletar uma filial que deseja.

git branch -D nova_branch: O comando usando o "-D" (letra maiúscula) é usando quando existem cometer no ramo.

git ramo --no-fundido: Comando para identificar se existe alguma filial não mesclada.

git mescl nova_branch -m"Mensagem sobre a mesclagem da filial.": Esse comando mescla a nova_branch ao mestre.
